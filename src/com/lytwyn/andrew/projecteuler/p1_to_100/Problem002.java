package com.lytwyn.andrew.projecteuler.p1_to_100;

import java.util.ArrayList;
import java.util.List;

/**
 * Even Fibonacci numbers
 * Problem 2
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 *
 * Thread Post: Wed, 13 Dec 2017, 09:57
 */
public class Problem002
{
    public static void main(String[] args)
    {
        List<Integer> fibonacci = getFibonacci(4000000);

        int sum = 0;
        for(Integer i : fibonacci)
        {
            if(i % 2 == 0) sum += i;
        }
        System.out.println(sum);
    }

    private static List<Integer> getFibonacci(final int LIMIT)
    {
        List<Integer> result = new ArrayList<>();
        result.add(1);
        result.add(2);

        while(result.get(result.size() - 1) < LIMIT)
        {
            result.add((result.get(result.size() - 1) + result.get(result.size() - 2)));
        }

        return result;
    }
}
